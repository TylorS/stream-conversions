{"version":3,"file":"stream-conversions.js","sources":["../src/interfaces.js","../src/is.js","../src/to.js","../src/index.js"],"sourcesContent":["const mostInterface = (stream, observer) => {\n  stream\n    .observe(x => observer.onNext(x))\n    .then(x => observer.onCompleted(x))\n    .catch(x => observer.onError(x))\n}\n\nconst rxInterface = (stream, observer) => {\n  stream.subscribe(\n    x => observer.onNext(x),\n    x => observer.onError(x),\n    x => observer.onCompleted(x)\n  )\n}\n\nconst baconInterface = (stream, observer) => {\n  stream.onValue(x => observer.onNext(x))\n  stream.onError(x => observer.onError(x))\n  stream.onEnd(x => observer.onCompleted(x))\n}\n\nconst kefirInterface = (stream, observer) => {\n  stream.onValue(x => observer.onNext(x))\n  stream.onError(x => observer.onError(x))\n  stream.onEnd(x => observer.onCompleted(x))\n}\n\nconst interfaces = {\n  most: mostInterface,\n  rx: rxInterface,\n  bacon: baconInterface,\n  kefir: kefirInterface,\n}\n\nexport default interfaces\n","const message = lib => `Stream provided is not a ${lib} stream`\n\nfunction isMost(stream) {\n  if (typeof stream.observe !== 'function') {\n    throw new Error(message('most'))\n  }\n}\n\nfunction isRx(stream) {\n  if (typeof stream.subscribe !== 'function' || typeof stream.onValue === `function`) {\n    throw new Error(message('rx'))\n  }\n}\n\nfunction isBacon(stream) {\n  if (typeof stream.onValue !== 'function' || typeof stream.onAny === `function`) {\n    throw new Error(message('bacon'))\n  }\n}\n\nfunction isKefir(stream) {\n  if (typeof stream.onAny !== `function`) {\n    throw new Error(message('kefir'))\n  }\n}\n\nconst is = {\n  most: isMost,\n  rx: isRx,\n  bacon: isBacon,\n  kefir: isKefir,\n}\n\nexport default is\n","import {create} from 'most'\nimport {Observable} from 'rx'\nimport Bacon from 'baconjs'\nimport Kefir  from 'kefir'\n\nconst toMost = (stream, streamInterface) =>\n  create((add, end, error) => {\n    const observer = {\n      onNext: add,\n      onCompleted: end,\n      onError: error,\n    }\n    streamInterface(stream, observer)\n  })\n\nconst toRx = (stream, streamInterface) => Observable.create(observer => {\n  streamInterface(stream, observer)\n})\n\nconst toBacon = (stream, streamInterface) =>\n  Bacon.fromBinder(sink => {\n    const observer = {\n      onNext: x => sink(new Bacon.Next(x)),\n      onCompleted: x => sink(new Bacon.End(x)),\n      onError: x => sink(new Bacon.Error(x)),\n    }\n    streamInterface(stream, observer)\n  })\n\nconst toKefir = (stream, streamInterface) =>\n  Kefir.stream(emitter => {\n    const observer = {\n      onNext: x => emitter.emit(x),\n      onError: x => emitter.error(x),\n      onCompleted: x => emitter.end(x),\n    }\n    streamInterface(stream, observer)\n  })\n\nconst to = {\n  most: toMost,\n  rx: toRx,\n  bacon: toBacon,\n  kefir: toKefir,\n}\n\nexport default to\n","import interfaces from './interfaces'\nimport is from './is'\nimport to from './to'\n\nconst libraries = [\n  'most',\n  'rx',\n  'bacon',\n  'kefir',\n]\n\nconst makeTo = fromLib =>\n  libraries.reduce(\n    (acc, toLib) => {\n      acc[toLib] = stream => {\n        is[fromLib](stream)\n        return to[toLib](stream, interfaces[fromLib])\n      }\n      return acc\n    }, {})\n\nconst convert = libraries.reduce((acc, lib) => {\n  acc[lib] = {to: makeTo(lib)}\n  return acc\n}, {})\n\nexport default convert\n"],"names":["create","Observable"],"mappings":"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"}